// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Projekt.Data;

#nullable disable

namespace Projekt.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20221224113410_remove fk")]
    partial class removefk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Projekt.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Id użytkownika");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasComment("Kraj");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Data dodania");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Data aktualizacji");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("Opis");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasComment("Nazwa");

                    b.Property<int?>("OwnerID")
                        .HasColumnType("integer")
                        .HasComment("Id właściciela drużyny");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("Status użytkownika");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Projekt.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Id użytkownika");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Data dodania");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Data aktualizacji");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Email użytkownika");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Imię użytkownika");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Hasło użytkownika");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("Status użytkownika");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Projekt.Models.Team", b =>
                {
                    b.HasOne("Projekt.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
